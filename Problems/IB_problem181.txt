b'Given a binary tree\n    struct TreeLinkNode {\n      TreeLinkNode *left;\n      TreeLinkNode *right;\n      TreeLinkNode *next;\n    }\n\n\nPopulate each next pointer to point to its next right node. If there is no next right node, the next pointer should be set to NULL.\nInitially, all next pointers are set to NULL.\n\nNote:\n\nYou may only use constant extra space.\n\n\nExample :\nGiven the following binary tree,\n         1\n       /  \\\n      2    3\n     / \\  / \\\n    4  5  6  7\n\n\nAfter calling your function, the tree should look like:\n         1 -> NULL\n       /  \\\n      2 -> 3 -> NULL\n     / \\  / \\\n    4->5->6->7 -> NULL\n\n\n\nNote 1:  that using recursion has memory overhead and does not qualify for constant space.\nNote 2: The tree need not be a perfect binary tree.\n\n'