b'Find the lowest common ancestor in an unordered binary tree given two values in the tree.\n\nLowest common ancestor : the lowest common ancestor (LCA) of two nodes v and w in a tree or directed acyclic graph (DAG) is the lowest (i.e. deepest) node that has both v and w as descendants.\n\nExample :\n\n        _______3______\n       /              \\\n    ___5__          ___1__\n   /      \\        /      \\\n   6      _2_     0        8\n         /   \\\n         7    4\n\n\nFor the above tree, the LCA of nodes 5 and 1 is 3.\n\nLCA = Lowest common ancestor\n\nPlease note that LCA for nodes 5 and 4 is 5.\n\n\nYou are given 2 values. Find the lowest common ancestor of the two nodes represented by val1 and val2\nNo guarantee that val1 and val2 exist in the tree. If one value doesn\xe2\x80\x99t exist in the tree then return -1.\nThere are no duplicate values.\nYou can use extra memory, helper functions, and can modify the node struct but, you can\xe2\x80\x99t add a parent pointer.\n\n\n'