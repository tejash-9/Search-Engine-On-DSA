b'Given an array of integers A of size N and an integer B.\narray A is rotated at some pivot unknown to you beforehand.\n(i.e., 0 1 2 4 5 6 7  might become 4 5 6 7 0 1 2 ).\nYou are given a target value B to search. If found in the array, return its index, otherwise return -1.\nYou may assume no duplicate exists in the array.\nNOTE:- Array A was sorted in non-decreasing order before rotation.\n\n\nNOTE : Think about the case when there are duplicates. Does your current solution work? How does the time complexity change?*\n\n\nInput Format\nThe first argument given is the integer array A.\nThe second argument given is the integer B.\n\n\nOutput Format\nReturn index of B in array A, otherwise return -1\n\n\nConstraints\n1 <= N <= 1000000\n1 <= A[i] <= 10^9\nall elements in A are disitinct.\n\n\nFor Example\nInput 1:\n    A = [4, 5, 6, 7, 0, 1, 2, 3]\n    B = 4\nOutput 1:\n    0\nExplanation 1:\n Target 4 is found at index 0 in A.\n\n\nInput 2:\n    A = [5, 17, 100, 3]\n    B = 6\nOutput 2:\n    -1\n\n\n'