b'Given a sorted array of integers A(0 based index) of size N, find the starting and ending position of a given integar B in array A.\nYour algorithm\xe2\x80\x99s runtime complexity must be in the order of O(log n).\nReturn an array of size 2, such that first element = starting position of B in A and second element = ending position of B in A, if B is not found in A return [-1, -1].\n\nInput Format\nThe first argument given is the integer array A.\nThe second argument given is the integer B.\n\n\nOutput Format\n Return an array of size 2, such that first element = starting position of B in A and second element = ending position of B in A, if B is not found in A return [-1, -1].\n\n\nConstraints\n1 <= N <= 10^6\n1 <= A[i], B <= 10^9\n\n\nFor Example\nInput 1:\n    A = [5, 7, 7, 8, 8, 10]\n    B = 8\nOutput 1:\n    [3, 4]\nExplanation 1:\n    First occurence of 8 in A is at index 3\n    Second occurence of 8 in A is at index 4\n    ans = [3, 4]\n\nInput 2:\n    A = [5, 17, 100, 111]\n    B = 3\nOutput 2:\n    [-1, -1]\n\n\n'