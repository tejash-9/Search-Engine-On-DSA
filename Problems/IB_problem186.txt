b'Given a binary tree\n    struct TreeLinkNode {\n      TreeLinkNode *left;\n      TreeLinkNode *right;\n      TreeLinkNode *next;\n    }\n\n\nPopulate each next pointer to point to its next right node. If there is no next right node, the next pointer should be set to NULL.\nInitially, all next pointers are set to NULL.\n\nNote:\n\nYou may only use constant extra space.\nYou may assume that it is a perfect binary tree (ie, all leaves are at the same level, and every parent has two children).\n\n\nExample :\nGiven the following perfect binary tree,\n         1\n       /  \\\n      2    5\n     / \\  / \\\n    3  4  6  7\n\n\nAfter calling your function, the tree should look like:\n         1 -> NULL\n       /  \\\n      2 -> 5 -> NULL\n     / \\  / \\\n    3->4->6->7 -> NULL\n\n\nNote that using recursion has memory overhead and does not qualify for constant space.\n'