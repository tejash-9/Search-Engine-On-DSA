b'Given 2 integers A and B and an array of integars C of size N.\nElement C[i] represents length of ith board.\nYou have to paint all N boards [C0, C1, C2, C3 \xe2\x80\xa6 CN-1]. There are A painters available and each of them takes B units of time to paint 1 unit of board.\nCalculate and return minimum time required to paint all boards under the constraints that any painter will only paint contiguous sections of board.\n\n\n2 painters cannot share a board to paint. That is to say, a board\ncannot be painted partially by one painter, and partially by another.\nA painter will only paint contiguous boards. Which means a\nconfiguration where painter 1 paints board 1 and 3 but not 2 is\ninvalid.\n\n\nReturn the ans % 10000003\n\nInput Format\nThe first argument given is the integer A.\nThe second argument given is the integer B.\nThe third argument given is the integer array C.\n\n\nOutput Format\nReturn minimum time required to paint all boards under the constraints that any painter will only paint contiguous sections of board % 10000003.\n\n\nConstraints\n1 <=A <= 1000\n1 <= B <= 10^6\n1 <= C.size() <= 10^5\n1 <= C[i] <= 10^6\n\n\nFor Example\nInput 1:\n    A = 2\n    B = 5\n    C = [1, 10]\nOutput 1:\n    50\nExplanation 1:\n    Possibility 1:- same painter paints both blocks, time taken = 55units\n    Possibility 2:- Painter 1 paints block 1, painter 2 paints block 2, time take = max(5, 50) = 50\n    There are no other distinct ways to paint boards.\n    ans = 50%10000003\n\nInput 2:\n    A = 10\n    B = 1\n    C = [1, 8, 11, 3]\nOutput 2:\n    11\n\n\n'