b'Find longest Arithmetic Progression in an integer array A of size N, and return its length.\nMore formally, find longest sequence of indices, 0 < i1 < i2 < \xe2\x80\xa6 < ik < ArraySize(0-indexed) such that sequence A[i1], A[i2], \xe2\x80\xa6, A[ik] is an Arithmetic Progression.\nArithmetic Progression is a sequence in which all the differences between consecutive pairs are the same, i.e sequence B[0], B[1], B[2], \xe2\x80\xa6, B[m - 1] of length m is an Arithmetic Progression if and only if B[1] - B[0] == B[2] - B[1] == B[3] - B[2] == \xe2\x80\xa6 == B[m - 1] - B[m - 2]\nNote: The common difference can be positive, negative or 0.\n\nInput Format:\nThe first and the only argument of input contains an integer array, A.\n\n\nOutput Format:\nReturn an integer, representing the length of the longest possible arithmetic progression.\n\n\nConstraints:\n1 <= N <= 1000\n1 <= A[i] <= 1e9\n\n\nExamples:\nInput 1:\n    A = [3, 6, 9, 12]\n\nOutput 1:\n    4\n\nExplanation 1:\n    [3, 6, 9, 12] form an arithmetic progression.\n\nInput 2:\n    A = [9, 4, 7, 2, 10]\n\nOutput 2:\n    3\n\nExplanation 2:\n    [4, 7, 10] form an arithmetic progression.\n\n\n'